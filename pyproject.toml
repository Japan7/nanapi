[project]
name = "nanapi"
version = "0.1.0"
description = "FastAPI + EdgeDB backend for Nana-chan"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12,<3.13"
dependencies = [
    "edgedb==2.1.0",
    "fastapi==0.115.0",
    "pydantic==2.9.2",
    "aiohttp[speedups]==3.10.10",
    "faust-cchardet==2.1.19",        # https://github.com/PyYoshi/cChardet/issues/81
    "orjson==3.10.7",
    "toolz==1.0.0",
    "backoff==2.2.1",
    "meilisearch-python-sdk==3.5.1",
    "numpy==2.1.2",
    "pillow==10.4.0",
    "rich==13.9.2",
    "discord-webhook[async]==1.3.1",
    "python-multipart==0.0.12",
    "passlib[bcrypt]==1.7.4",
    "cachetools==5.5.0",
    "asyncache==0.3.1",
    "hypercorn==0.17.3",
    "tzdata==2024.2",
    "pyjwt==2.9.0",
    "ics==0.7.2",
]

[tool.uv]
dev-dependencies = [
    "pyright==1.1.384",
    "ruff==0.6.9",
    "uvicorn==0.31.1",
    "edgedb-pydantic-codegen==2024.10.0",
    "pyinstrument==5.0.0",
]

[tool.pyright]
reportDeprecated = true
ignore = ["nanapi/nanachan_v2_migrate.py"]

[tool.ruff]
line-length = 99
exclude = [
    "nanapi/database",
    "nanapi/nanachan_v2_migrate.py",
    "nanapi/local_settings.py",
]

[tool.ruff.lint]
select = ["E", "F", "W", "B", "SIM", "I"]
ignore = [
    # lambda expressions
    "E731",
    # ambiguous variable name
    "E741",
    # Do not perform function calls in argument defaults
    "B008",
    # Within an except clause, raise exceptions with `raise ... from err` or `raise ... from None`
    "B904",
    # `zip()` without an explicit `strict=` parameter
    "B905",
    # Use `contextlib.suppress(asyncio.CancelledError)` instead of try-except-pass
    "SIM105",
    # Use ternary operator `{contents}` instead of if-else-block
    "SIM108",
]

[tool.ruff.format]
quote-style = "single"
