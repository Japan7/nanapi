# Generated by gel-pydantic-codegen
# pyright: strict

from gel import AsyncIOExecutor
from pydantic import BaseModel, TypeAdapter

EDGEQL_QUERY = r"""
select ai::Prompt {
  name,
  description,
  prompt,
  arguments: { name, description }
}
filter .client = global client
and .name = <str>$name
"""


class PromptSelectByNameResultArguments(BaseModel):
    name: str
    description: str | None


class PromptSelectByNameResult(BaseModel):
    name: str
    description: str | None
    prompt: str
    arguments: list[PromptSelectByNameResultArguments]


adapter = TypeAdapter[PromptSelectByNameResult | None](PromptSelectByNameResult | None)


async def prompt_select_by_name(
    executor: AsyncIOExecutor,
    *,
    name: str,
) -> PromptSelectByNameResult | None:
    resp = await executor.query_single_json(  # pyright: ignore[reportUnknownMemberType]
        EDGEQL_QUERY,
        name=name,
    )
    return adapter.validate_json(resp, strict=False)
