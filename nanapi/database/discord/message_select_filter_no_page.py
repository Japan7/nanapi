# Generated by gel-pydantic-codegen
# pyright: strict
from typing import Any

from gel import AsyncIOExecutor
from pydantic import BaseModel, TypeAdapter

EDGEQL_QUERY = r"""
with
  channel_id := <str>$channel_id,
  n_offset := <optional int64>$offset,
  n_limit := <optional int64>$limit,
select discord::Message { data }
filter .client = global client
and .channel_id = channel_id
and not exists .deleted_at
and not exists .pages
order by .timestamp asc
offset n_offset
limit n_limit;
"""


class MessageSelectFilterNoPageResult(BaseModel):
    data: Any


adapter = TypeAdapter[list[MessageSelectFilterNoPageResult]](list[MessageSelectFilterNoPageResult])


async def message_select_filter_no_page(
    executor: AsyncIOExecutor,
    *,
    channel_id: str,
    offset: int | None = None,
    limit: int | None = None,
) -> list[MessageSelectFilterNoPageResult]:
    resp = await executor.query_json(  # pyright: ignore[reportUnknownMemberType]
        EDGEQL_QUERY,
        channel_id=channel_id,
        offset=offset,
        limit=limit,
    )
    return adapter.validate_json(resp, strict=False)
