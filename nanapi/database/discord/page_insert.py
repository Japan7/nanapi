# Generated by gel-pydantic-codegen
# pyright: strict
from uuid import UUID

from gel import AsyncIOExecutor
from pydantic import BaseModel, TypeAdapter

EDGEQL_QUERY = r"""
with
  context := <str>$context,
  channel_id := <str>$channel_id,
  message_ids := <array<str>>$message_ids,
  messages := (
      select discord::Message
      filter .client = global client and .message_id in array_unpack(message_ids)
  )
insert discord::MessagePage {
  client := global client,
  context := context,
  channel_id := channel_id,
  messages := messages,
}
"""


class PageInsertResult(BaseModel):
    id: UUID


adapter = TypeAdapter[PageInsertResult](PageInsertResult)


async def page_insert(
    executor: AsyncIOExecutor,
    *,
    context: str,
    channel_id: str,
    message_ids: list[str],
) -> PageInsertResult:
    resp = await executor.query_single_json(  # pyright: ignore[reportUnknownMemberType]
        EDGEQL_QUERY,
        context=context,
        channel_id=channel_id,
        message_ids=message_ids,
    )
    return adapter.validate_json(resp, strict=False)
