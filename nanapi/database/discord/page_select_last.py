# Generated by gel-pydantic-codegen
# pyright: strict
from datetime import datetime
from typing import Any
from uuid import UUID

from gel import AsyncIOExecutor
from pydantic import BaseModel, TypeAdapter

EDGEQL_QUERY = r"""
with
  channel_id := <str>$channel_id
select discord::MessagePage {
  id,
  messages: { data },
  to_timestamp,
}
filter .client = global client
and .channel_id = channel_id
order by .to_timestamp desc
limit 1
"""


class PageSelectLastResultMessages(BaseModel):
    data: Any


class PageSelectLastResult(BaseModel):
    id: UUID
    messages: list[PageSelectLastResultMessages]
    to_timestamp: datetime | None


adapter = TypeAdapter[PageSelectLastResult | None](PageSelectLastResult | None)


async def page_select_last(
    executor: AsyncIOExecutor,
    *,
    channel_id: str,
) -> PageSelectLastResult | None:
    resp = await executor.query_single_json(  # pyright: ignore[reportUnknownMemberType]
        EDGEQL_QUERY,
        channel_id=channel_id,
    )
    return adapter.validate_json(resp, strict=False)
