# Generated by gel-pydantic-codegen
# pyright: strict
from uuid import UUID

from gel import AsyncIOExecutor
from pydantic import BaseModel, TypeAdapter

EDGEQL_QUERY = r"""
with
  id := <uuid>$id,
  context := <str>$context,
  message_ids := <array<str>>$message_ids,
  messages := (
    select discord::Message
    filter .client = global client and .message_id in array_unpack(message_ids)
  )
update discord::MessagePage
filter .id = id
set {
  context := context,
  messages := messages,
}
"""


class PageUpdateResult(BaseModel):
    id: UUID


adapter = TypeAdapter[PageUpdateResult | None](PageUpdateResult | None)


async def page_update(
    executor: AsyncIOExecutor,
    *,
    id: UUID,
    context: str,
    message_ids: list[str],
) -> PageUpdateResult | None:
    resp = await executor.query_single_json(  # pyright: ignore[reportUnknownMemberType]
        EDGEQL_QUERY,
        id=id,
        context=context,
        message_ids=message_ids,
    )
    return adapter.validate_json(resp, strict=False)
