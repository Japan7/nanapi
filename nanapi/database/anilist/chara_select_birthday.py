# Generated by gel-pydantic-codegen
# pyright: strict
from enum import StrEnum

from gel import AsyncIOExecutor
from pydantic import BaseModel, TypeAdapter

EDGEQL_QUERY = r"""
with
  jst := cal::to_local_date(datetime_current(), 'Asia/Tokyo')
select anilist::Character {
  id_al,
  favourites,
  site_url,
  name_user_preferred,
  name_alternative,
  name_alternative_spoiler,
  name_native,
  description,
  image_large,
  gender,
  age,
  date_of_birth_year,
  date_of_birth_month,
  date_of_birth_day,
  rank,
  fuzzy_gender,
}
filter .date_of_birth_month = cal::date_get(jst, 'month')
and .date_of_birth_day = cal::date_get(jst, 'day')
order by .favourites desc
"""


class WaicolleRank(StrEnum):
    S = 'S'
    A = 'A'
    B = 'B'
    C = 'C'
    D = 'D'
    E = 'E'


class CharaSelectBirthdayResult(BaseModel):
    id_al: int
    favourites: int
    site_url: str
    name_user_preferred: str
    name_alternative: list[str]
    name_alternative_spoiler: list[str]
    name_native: str | None
    description: str | None
    image_large: str
    gender: str | None
    age: str | None
    date_of_birth_year: int | None
    date_of_birth_month: int | None
    date_of_birth_day: int | None
    rank: WaicolleRank
    fuzzy_gender: str | None


adapter = TypeAdapter[list[CharaSelectBirthdayResult]](list[CharaSelectBirthdayResult])


async def chara_select_birthday(
    executor: AsyncIOExecutor,
) -> list[CharaSelectBirthdayResult]:
    resp = await executor.query_json(  # pyright: ignore[reportUnknownMemberType]
        EDGEQL_QUERY,
    )
    return adapter.validate_json(resp, strict=False)
